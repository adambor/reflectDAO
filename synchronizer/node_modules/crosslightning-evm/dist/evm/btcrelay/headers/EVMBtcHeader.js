"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EVMBtcHeader = void 0;
class EVMBtcHeader {
    constructor(obj) {
        this.version = obj.version;
        this.reversedPrevBlockhash = obj.reversedPrevBlockhash;
        this.merkleRoot = obj.merkleRoot;
        this.timestamp = obj.timestamp;
        this.nbits = obj.nbits;
        this.nonce = obj.nonce;
        this.hash = obj.hash;
    }
    serialize() {
        const versionBuffer = Buffer.alloc(4);
        versionBuffer.writeUint32LE(this.version);
        const restBuffer = Buffer.alloc(12);
        restBuffer.writeUint32LE(this.timestamp, 0);
        restBuffer.writeUint32LE(this.nbits, 4);
        restBuffer.writeUint32LE(this.nonce, 8);
        return Buffer.concat([
            versionBuffer,
            this.reversedPrevBlockhash,
            this.merkleRoot,
            restBuffer
        ]);
    }
    getMerkleRoot() {
        return this.merkleRoot;
    }
    getNbits() {
        return this.nbits;
    }
    getNonce() {
        return this.nonce;
    }
    getReversedPrevBlockhash() {
        return this.reversedPrevBlockhash;
    }
    getTimestamp() {
        return this.timestamp;
    }
    getVersion() {
        return this.version;
    }
}
exports.EVMBtcHeader = EVMBtcHeader;
