import { providers, Wallet } from "ethers";
import { Deferrable } from "@ethersproject/properties/lib";
export declare class OverridenStaticJsonRpcProvider extends providers.StaticJsonRpcProvider {
    private waitTxs;
    constructor(rpcUrl: string, chainId: number);
    txConfirmed(originalTransactionHash: string, replacement: providers.TransactionReceipt): void;
    waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<providers.TransactionReceipt>;
}
export declare class EVMWallet extends Wallet {
    private readonly chainId;
    private pendingTxs;
    private txMap;
    private confirmedNonce;
    private pendingNonce;
    private feeBumper;
    private stopped;
    private readonly directory;
    private readonly boundTransactionListener;
    constructor(privateKey: string, rpcUrl: string, chainId: number, directory: string);
    transactionListener(transaction: providers.TransactionReceipt): void;
    init(): Promise<void>;
    stop(): void;
    private priorSavePromise;
    private saveCount;
    save(): Promise<void>;
    signTransaction(transaction: providers.TransactionRequest): Promise<string>;
    sendTransaction(transaction: Deferrable<providers.TransactionRequest>): Promise<providers.TransactionResponse>;
}
